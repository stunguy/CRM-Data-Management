# Code Generated by Sidekick is for learning and experimentation purposes only.
from typing import Any, Text, Dict, List
from rasa_sdk import Action, Tracker
from rasa_sdk.executor import CollectingDispatcher
import sqlite3

class ActionQueryDatabase(Action):

    def name(self) -> Text:
        return "action_query_database"

    def run(self, dispatcher: CollectingDispatcher,
            tracker: Tracker,
            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:

        # Extract slot value
        entity_type = tracker.get_slot('entity_type')

        # Formulate query based on slot value
        if entity_type == "products":
            query = "SELECT COUNT(*) FROM products"
        else:
            # Default query or handle unknown entity types
            query = "SELECT COUNT(*) FROM products"

        # Connect to the database

        def get_db_connection():
            conn = sqlite3.connect('C:/Users/vijig/Documents/GitHub/CRM-Data-Management/Retex.db')
            conn.row_factory = sqlite3.Row
            conn.execute('PRAGMA journal_mode=WAL;')
            return conn
       
        conn = get_db_connection()
        cursor = conn.cursor()

        # Execute the query
        cursor.execute(query)
        result = cursor.fetchone()

        # Close the connection
        conn.close()

        # Send the result back to the user
        if result:
            count = result[0]
            dispatcher.utter_message(text=f"You have {count} {entity_type}.")
        else:
            dispatcher.utter_message(text="I couldn't retrieve the information.")

        return []
